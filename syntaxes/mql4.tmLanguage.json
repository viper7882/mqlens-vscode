{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "MQL4",
  "scopeName": "source.mql4",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#preprocessor"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#types"
    },
    {
      "include": "#event_handlers"
    },
    {
      "include": "#trading_functions"
    },
    {
      "include": "#technical_indicators"
    },
    {
      "include": "#market_functions"
    },
    {
      "include": "#utility_functions"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#variables"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.mql4",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.block.mql4",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "preprocessor": {
      "patterns": [
        {
          "name": "meta.preprocessor.mql4",
          "begin": "^\\s*#",
          "end": "$",
          "patterns": [
            {
              "name": "keyword.control.directive.mql4",
              "match": "\\b(property|include|import|define|ifdef|ifndef|endif|else|elif)\\b"
            },
            {
              "name": "string.quoted.double.include.mql4",
              "begin": "<",
              "end": ">"
            },
            {
              "name": "string.quoted.double.include.mql4",
              "begin": "\"",
              "end": "\""
            }
          ]
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.mql4",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.mql4",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.mql4",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.mql4",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.mql4",
          "match": "\\b0[xX][0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.decimal.mql4",
          "match": "\\b\\d+\\.\\d+([eE][+-]?\\d+)?\\b"
        },
        {
          "name": "constant.numeric.integer.mql4",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.mql4",
          "match": "\\b(if|else|switch|case|default|for|while|do|break|continue|return|goto)\\b"
        },
        {
          "name": "keyword.operator.logical.mql4",
          "match": "\\b(and|or|not)\\b"
        },
        {
          "name": "storage.modifier.mql4",
          "match": "\\b(const|extern|static|virtual|override|final|public|private|protected)\\b"
        },
        {
          "name": "storage.type.modifier.mql4",
          "match": "\\b(input|sinput|group)\\b"
        },
        {
          "name": "keyword.other.mql4",
          "match": "\\b(template|typename|this|new|delete|sizeof)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.primitive.mql4",
          "match": "\\b(void|bool|char|uchar|short|ushort|int|uint|long|ulong|float|double|string|datetime|color)\\b"
        },
        {
          "name": "storage.type.user.mql4",
          "match": "\\b(enum|struct|class|union)\\b"
        }
      ]
    },
    "event_handlers": {
      "patterns": [
        {
          "name": "entity.name.function.event.mql4",
          "match": "\\b(OnInit|OnDeinit|OnTick|OnStart|OnTimer|OnTrade|OnTester|OnTesterInit|OnTesterPass|OnTesterDeinit|OnChartEvent|OnCalculate|OnBookEvent)\\b"
        }
      ]
    },
    "trading_functions": {
      "patterns": [
        {
          "name": "support.function.trading.mql4",
          "match": "\\b(OrderSend|OrderClose|OrderModify|OrderDelete|OrderSelect|OrdersTotal|OrdersHistoryTotal|OrderTicket|OrderType|OrderLots|OrderSymbol|OrderOpenPrice|OrderClosePrice|OrderOpenTime|OrderCloseTime|OrderExpiration|OrderComment|OrderCommission|OrderSwap|OrderProfit|OrderStopLoss|OrderTakeProfit|OrderMagicNumber)\\b"
        }
      ]
    },
    "technical_indicators": {
      "patterns": [
        {
          "name": "support.function.indicator.mql4",
          "match": "\\b(iMA|iRSI|iMACD|iStochastic|iBands|iADX|iCCI|iMomentum|iWPR|iATR|iBearsPower|iBullsPower|iDeMarker|iForce|iOsMA|iSAR|iStdDev|iAC|iAD|iAO|iAlligator|iFractals|iGator|iBWMFI|iCustom|iTime|iOpen|iHigh|iLow|iClose|iVolume|iHighest|iLowest|iBars|iBarShift)\\b"
        }
      ]
    },
    "market_functions": {
      "patterns": [
        {
          "name": "support.function.market.mql4",
          "match": "\\b(MarketInfo|SymbolInfoDouble|SymbolInfoInteger|SymbolInfoString|SymbolInfoTick|SymbolSelect|RefreshRates|Bid|Ask|Point|Digits|Symbol|Period|Bars|Volume|Time|Open|High|Low|Close)\\b"
        }
      ]
    },
    "utility_functions": {
      "patterns": [
        {
          "name": "support.function.utility.mql4",
          "match": "\\b(Print|Alert|Comment|SendMail|SendNotification|PlaySound|MessageBox|GetLastError|ErrorDescription|IsConnected|IsDemo|IsDllsAllowed|IsExpertEnabled|IsLibrariesAllowed|IsOptimization|IsStopped|IsTradeAllowed|IsTradeContextBusy|IsVisualMode|UninitializeReason|TerminalCompany|TerminalName|TerminalPath|AccountBalance|AccountCredit|AccountCompany|AccountCurrency|AccountEquity|AccountFreeMargin|AccountFreeMarginCheck|AccountFreeMarginMode|AccountLeverage|AccountMargin|AccountName|AccountNumber|AccountProfit|AccountServer|AccountStopoutLevel|AccountStopoutMode|TimeCurrent|TimeLocal|TimeGMT|TimeDayOfWeek|TimeDayOfYear|TimeDay|TimeHour|TimeMinute|TimeMonth|TimeSeconds|TimeYear|TimeToStr|StrToTime|MathAbs|MathArccos|MathArcsin|MathArctan|MathCeil|MathCos|MathExp|MathFloor|MathLog|MathMax|MathMin|MathMod|MathPow|MathRand|MathRound|MathSin|MathSqrt|MathSrand|MathTan|StringLen|StringSubstr|StringFind|StringReplace|StringTrimLeft|StringTrimRight|StringToLower|StringToUpper|StringConcatenate|StringGetChar|StringSetChar|CharToStr|DoubleToStr|NormalizeDouble|StrToDouble|StrToInteger|ArraySize|ArrayResize|ArrayCopy|ArraySort|ArrayBsearch|ArrayMaximum|ArrayMinimum|ArrayRange|ArraySetAsSeries|ArrayIsSeries|ArrayDimension|GlobalVariableCheck|GlobalVariableTime|GlobalVariableDel|GlobalVariableGet|GlobalVariableName|GlobalVariableSet|GlobalVariableSetOnCondition|GlobalVariablesDeleteAll|GlobalVariablesTotal|HideTestIndicators|IndicatorBuffers|IndicatorCounted|IndicatorDigits|IndicatorShortName|SetIndexArrow|SetIndexBuffer|SetIndexDrawBegin|SetIndexEmptyValue|SetIndexLabel|SetIndexShift|SetIndexStyle|SetLevelStyle|SetLevelValue|ObjectCreate|ObjectDelete|ObjectDescription|ObjectFind|ObjectGet|ObjectGetFiboDescription|ObjectGetShiftByValue|ObjectGetValueByShift|ObjectMove|ObjectName|ObjectsDeleteAll|ObjectSet|ObjectSetFiboDescription|ObjectSetText|ObjectsTotal|ObjectType|WindowBarsPerChart|WindowExpertName|WindowFind|WindowFirstVisibleBar|WindowHandle|WindowIsVisible|WindowOnDropped|WindowPriceMax|WindowPriceMin|WindowPriceOnDropped|WindowRedraw|WindowScreenShot|WindowTimeOnDropped|WindowsTotal|WindowXOnDropped|WindowYOnDropped)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.mql4",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.mql4",
          "match": "\\b(true|false|NULL|EMPTY|EMPTY_VALUE)\\b"
        },
        {
          "name": "constant.numeric.trading.mql4",
          "match": "\\b(OP_BUY|OP_SELL|OP_BUYLIMIT|OP_SELLLIMIT|OP_BUYSTOP|OP_SELLSTOP)\\b"
        },
        {
          "name": "constant.numeric.market.mql4",
          "match": "\\b(MODE_BID|MODE_ASK|MODE_POINT|MODE_DIGITS|MODE_SPREAD|MODE_STOPLEVEL|MODE_LOTSIZE|MODE_TICKVALUE|MODE_TICKSIZE|MODE_SWAPLONG|MODE_SWAPSHORT|MODE_STARTING|MODE_EXPIRATION|MODE_TRADEALLOWED|MODE_MINLOT|MODE_LOTSTEP|MODE_MAXLOT|MODE_SWAPTYPE|MODE_PROFITCALCMODE|MODE_MARGINCALCMODE|MODE_MARGININIT|MODE_MARGINMAINTENANCE|MODE_MARGINHEDGED|MODE_MARGINREQUIRED)\\b"
        },
        {
          "name": "constant.numeric.timeframe.mql4",
          "match": "\\b(PERIOD_M1|PERIOD_M5|PERIOD_M15|PERIOD_M30|PERIOD_H1|PERIOD_H4|PERIOD_D1|PERIOD_W1|PERIOD_MN1)\\b"
        },
        {
          "name": "constant.numeric.price.mql4",
          "match": "\\b(PRICE_CLOSE|PRICE_OPEN|PRICE_HIGH|PRICE_LOW|PRICE_MEDIAN|PRICE_TYPICAL|PRICE_WEIGHTED)\\b"
        },
        {
          "name": "constant.numeric.indicator.mql4",
          "match": "\\b(MODE_SMA|MODE_EMA|MODE_SMMA|MODE_LWMA|MODE_MAIN|MODE_SIGNAL|MODE_PLUSDI|MODE_MINUSDI|MODE_UPPER|MODE_LOWER)\\b"
        },
        {
          "name": "constant.numeric.color.mql4",
          "match": "\\b(CLR_NONE|CLR_BLACK|CLR_WHITE|CLR_RED|CLR_GREEN|CLR_BLUE|CLR_YELLOW|CLR_MAGENTA|CLR_CYAN)\\b"
        },
        {
          "name": "constant.numeric.draw.mql4",
          "match": "\\b(DRAW_LINE|DRAW_SECTION|DRAW_HISTOGRAM|DRAW_ARROW|DRAW_ZIGZAG|DRAW_NONE)\\b"
        },
        {
          "name": "constant.numeric.style.mql4",
          "match": "\\b(STYLE_SOLID|STYLE_DASH|STYLE_DOT|STYLE_DASHDOT|STYLE_DASHDOTDOT)\\b"
        },
        {
          "name": "constant.numeric.object.mql4",
          "match": "\\b(OBJ_VLINE|OBJ_HLINE|OBJ_TREND|OBJ_TRENDBYANGLE|OBJ_REGRESSION|OBJ_CHANNEL|OBJ_STDDEVCHANNEL|OBJ_GANNLINE|OBJ_GANNFAN|OBJ_GANNGRID|OBJ_FIBO|OBJ_FIBOTIMES|OBJ_FIBOFAN|OBJ_FIBOARC|OBJ_EXPANSION|OBJ_FIBOCHANNEL|OBJ_RECTANGLE|OBJ_TRIANGLE|OBJ_ELLIPSE|OBJ_PITCHFORK|OBJ_CYCLES|OBJ_TEXT|OBJ_ARROW|OBJ_LABEL)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.mql4",
          "match": "(=|\\+=|-=|\\*=|/=|%=|&=|\\|=|\\^=|<<=|>>=)"
        },
        {
          "name": "keyword.operator.comparison.mql4",
          "match": "(==|!=|<|<=|>|>=)"
        },
        {
          "name": "keyword.operator.logical.mql4",
          "match": "(&&|\\|\\||!)"
        },
        {
          "name": "keyword.operator.arithmetic.mql4",
          "match": "(\\+|-|\\*|/|%|\\+\\+|--)"
        },
        {
          "name": "keyword.operator.bitwise.mql4",
          "match": "(&|\\||\\^|~|<<|>>)"
        },
        {
          "name": "keyword.operator.ternary.mql4",
          "match": "(\\?|:)"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.mql4",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  }
}
